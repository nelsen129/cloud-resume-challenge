name: 'deploy-production'

on:
  push:

permissions:
  id-token: write
  contents: read

jobs:
  production-deploy-base:
    name: 'deploy-production-base'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: infrastructure/components/base

    steps:
      - name: Git clone the rpository
        uses: actions/checkout@v3

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Setup latest Terraform version
        uses: hashicorp/setup-terraform@v2

      - name: Setup Terraform variables
        run: |-
          cat <<EOT >> terraform.tfvars
          account_emails = ["${{ secrets.AWS_ACCOUNT_EMAILS }}"]

          account_names = ["${{ secrets.AWS_ACCOUNT_NAMES }}"]
          EOT

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="key=base/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file="../../environments/base.tfvars"

  production-deploy-frontend:
    name: 'deploy-production-frontend'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: infrastructure/components/frontend

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="key=prod-frontend/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file="../../environments/prod.tfvars" -var="role_arn=${{ secrets.AWS_GITHUB_ACTIONS_ROLE}}"
