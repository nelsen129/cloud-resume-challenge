name: "destroy-development"

on:
  pull_request:
    types:
      - closed

permissions:
  id-token: write
  contents: read

jobs:
  development-destroy-integration:
    name: "destroy-development-integration"
    runs-on: ubuntu-latest
    environment: development

    defaults:
      run:
        shell: bash
        working-directory: infrastructure/components/integration

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Sets MODIFIED_BRANCH_NAME
        env:
          name: "${{github.head_ref}}"
        run: |
          echo "MODIFIED_BRANCH_NAME=$(echo $name | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="key=dev-${MODIFIED_BRANCH_NAME}-integration/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var-file="../../environments/dev.tfvars" -var="role_arn=${{ secrets.AWS_GITHUB_ACTIONS_ROLE}}" -var="environment=dev-${MODIFIED_BRANCH_NAME}"

  development-destroy-frontend:
    name: "destroy-development-frontend"
    runs-on: ubuntu-latest
    environment: development
    needs:
      - development-destroy-integration

    defaults:
      run:
        shell: bash
        working-directory: infrastructure/components/frontend

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Sets MODIFIED_BRANCH_NAME
        env:
          name: "${{github.head_ref}}"
        run: |
          echo "MODIFIED_BRANCH_NAME=$(echo $name | sed 's/\//-/g')" >> $GITHUB_ENV
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="key=dev-${MODIFIED_BRANCH_NAME}-frontend/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var-file="../../environments/dev.tfvars" -var="role_arn=${{ secrets.AWS_GITHUB_ACTIONS_ROLE}}" -var="environment=dev-${MODIFIED_BRANCH_NAME}"

  development-destroy-backend:
    name: "destroy-development-backend"
    runs-on: ubuntu-latest
    environment: development
    needs:
      - development-destroy-integration

    defaults:
      run:
        shell: bash
        working-directory: infrastructure/components/backend

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Sets MODIFIED_BRANCH_NAME
        env:
          name: "${{github.head_ref}}"
        run: |
          echo "MODIFIED_BRANCH_NAME=$(echo $name | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="key=dev-${MODIFIED_BRANCH_NAME}-backend/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var-file="../../environments/dev.tfvars" -var="role_arn=${{ secrets.AWS_GITHUB_ACTIONS_ROLE}}" -var="environment=dev-${MODIFIED_BRANCH_NAME}"
